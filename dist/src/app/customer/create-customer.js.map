{"version":3,"sources":["../../../../src/app/customer/create-customer.ts"],"sourcesContent":["import CustomerRepository from \"@/core/customer/interfaces/customer.repository\";\nimport Customer from \"@/core/customer/entities/Customer\";\nimport { sendWelcomeEmail } from \"./send-welcome-email\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport CustomerDTO from \"@/core/customer/interfaces/customer.dto\";\n\nexport async function createCustomer(\n  customerRepository: CustomerRepository,\n  customerData: CustomerDTO\n): Promise<Customer> {\n  const existing = await customerRepository.findByEmail(customerData.email);\n  if (existing) {\n    throw new Error(\"Customer already exists\");\n  }\n\n  const id = uuidv4();\n  const newCustomer = new Customer({\n    id,\n    ...customerData,\n  });\n\n  const savedCustomer = await customerRepository.create(newCustomer);\n\n  sendWelcomeEmail({\n    recipient: savedCustomer.email,\n    firstName: savedCustomer.fullName,\n  });\n\n  return savedCustomer;\n}\n"],"names":["Customer","sendWelcomeEmail","v4","uuidv4","createCustomer","customerRepository","customerData","existing","findByEmail","email","Error","id","newCustomer","savedCustomer","create","recipient","firstName","fullName"],"mappings":"AACA,OAAOA,cAAc,oCAAoC;AACzD,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,MAAMC,MAAM,QAAQ,OAAO;AAGpC,OAAO,eAAeC,eACpBC,kBAAsC,EACtCC,YAAyB;IAEzB,MAAMC,WAAW,MAAMF,mBAAmBG,WAAW,CAACF,aAAaG,KAAK;IACxE,IAAIF,UAAU;QACZ,MAAM,IAAIG,MAAM;IAClB;IAEA,MAAMC,KAAKR;IACX,MAAMS,cAAc,IAAIZ,SAAS;QAC/BW;QACA,GAAGL,YAAY;IACjB;IAEA,MAAMO,gBAAgB,MAAMR,mBAAmBS,MAAM,CAACF;IAEtDX,iBAAiB;QACfc,WAAWF,cAAcJ,KAAK;QAC9BO,WAAWH,cAAcI,QAAQ;IACnC;IAEA,OAAOJ;AACT"}